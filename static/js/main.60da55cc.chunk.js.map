{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Scroll/Scroll.jsx","service/Api.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGalleryList/ImageGalleryList.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","state","searchQuery","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ScrollContent","window","scrollTo","top","document","documentElement","scrollHeight","behavior","API_KEY","BASE_URL","fetchImages","page","perPage","url","fetch","then","response","ok","json","Promise","reject","Error","images","hits","ImageGalleryItem","webformatURL","largeImageURL","tags","onImageClick","onClick","src","alt","ImageGalleryList","console","log","map","image","id","Button","name","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","func","propType","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","children","ImageGallery","loadMore","status","showModal","imageAlt","onLoadMore","toggleModal","dataSrc","dataset","prevProps","prevState","prevSearchQuery","nextSearchQuery","prevPage","nextPage","FetchImages","catch","style","color","height","width","message","length","maxHeight","background","App","handleFormSubmit","autoClose","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60da55cc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = e => {\n    // console.log(e.currentTarget.value);\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n    // console.log(this.state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      return toast.error('Введите Ваш Запрос');\n    }\n\n    // console.log(this.state);\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","const ScrollContent = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n};\n\nexport default ScrollContent;\n","const API_KEY = `22901299-3a9abb112bfd753d84521cd93`;\nconst BASE_URL = `https://pixabay.com/api/`;\n\nconst fetchImages = (searchQuery, page = 1, perPage = 12) => {\n  const url = `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\n\n  return fetch(url)\n    .then(response => {\n      // console.log(searchQuery);\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(\n        new Error(\n          `no results were found for your search ${this.state.searchQuery}`,\n        ),\n      ); // если 404\n    })\n    .then(images => images.hits);\n};\nexport default fetchImages;\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  onImageClick,\n}) {\n  // console.log(largeImageURL);\n  return (\n    <>\n      <img\n        onClick={e => {\n          onImageClick(e);\n        }}\n        src={webformatURL}\n        data-src={largeImageURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </>\n  );\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from 'components/ImageGallery/ImageGalleryItem';\n\nexport default function ImageGalleryList({ images, onImageClick }) {\n  console.log(images, onImageClick);\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(image => (\n        <li className=\"ImageGalleryItem\" key={image.id}>\n          <ImageGalleryItem {...image} onImageClick={onImageClick} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onImageClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" name=\"Load more\" className=\"Button\" onClick={onClick}>\n      <span className=\"lable\">Load more</span>\n    </button>\n  );\n}\n\nButton.propType = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    // console.log('ModalDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // console.log('ModalUnMount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n\n// import * as basicLightbox from 'basiclightbox';\n\n// export default function (e) {\n//   const dataSrc = e.target.dataset.src;\n//   // console.log(e.target.nodeName);\n//   // console.log(dataSrc);\n//   if (e.target.nodeName !== 'IMG') {\n//     return;\n//   } else if (dataSrc) {\n//     const instance = basicLightbox.create(`\n//         <img src=\"${dataSrc}\" width=\"800\" height=\"600\">\n//     `);\n\n//     instance.show();\n//   }\n// }\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport ScrollContent from 'components/Scroll';\n\nimport FetchImages from 'service/Api';\nimport ImageGalleryList from 'components/ImageGallery/ImageGalleryList';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    page: 1,\n    loadMore: false,\n    error: null,\n    status: 'idle',\n    showModal: false,\n    largeImageURL: '',\n    imageAlt: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearchQuery = prevProps.searchQuery;\n    const nextSearchQuery = this.props.searchQuery;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevSearchQuery !== nextSearchQuery) {\n      this.setState({ status: 'pending' });\n\n      FetchImages(nextSearchQuery, nextPage)\n        .then(images => {\n          this.setState({\n            images: [...prevState.images, ...images],\n            loadMore: true,\n            status: 'resolved',\n          });\n        })\n        .catch(error => this.setState({ error, status: 'rejected' })); //== если не 404\n    }\n    if (prevPage !== nextPage) {\n      FetchImages(nextSearchQuery, nextPage)\n        .then(images => {\n          this.setState({\n            images: [...prevState.images, ...images],\n            loadMore: true,\n            status: 'resolved',\n          });\n          ScrollContent();\n        })\n        .catch(error => this.setState({ error, status: 'rejected' })); //== если не 404\n    }\n  }\n\n  onLoadMore = () => {\n    const { page } = this.state;\n    this.setState({ page: page + 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  onImageClick = e => {\n    const dataSrc = e.target.dataset.src;\n    const alt = e.target.alt;\n    this.setState({\n      largeImageURL: dataSrc,\n      imageAlt: alt,\n      showModal: true,\n    });\n  };\n\n  render() {\n    const {\n      status,\n      error,\n      images,\n      loadMore,\n      showModal,\n      largeImageURL,\n      imageAlt,\n    } = this.state;\n\n    if (status === 'idle')\n      return <h1 style={{ color: '#3f51b5' }}>Enter Your Request</h1>;\n\n    if (status === 'pending')\n      return (\n        <div>\n          <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n        </div>\n      );\n\n    if (status === 'rejected') return <h1>{error.message}</h1>;\n\n    if (status === 'resolved' && images.length < 1)\n      return (\n        <h2 style={{ color: 'tomato' }}>\n          No image has been found. Please enter a more specific query!\n        </h2>\n      );\n\n    if (status === 'resolved')\n      return (\n        <div>\n          <ImageGalleryList images={images} onImageClick={this.onImageClick} />\n          {loadMore && <Button onClick={this.onLoadMore} />}\n\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img\n                src={largeImageURL}\n                alt={imageAlt}\n                style={{ maxHeight: '80vh', background: 'white' }}\n              />\n            </Modal>\n          )}\n        </div>\n      );\n  }\n}\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport SearchBar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleFormSubmit = searchQuery => {\n    // console.log(searchQuery);\n    this.setState({ searchQuery: searchQuery });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.handleFormSubmit} />\n\n        <ImageGallery searchQuery={searchQuery} />\n\n        <ToastContainer autoClose={3000} theme={'colored'} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}